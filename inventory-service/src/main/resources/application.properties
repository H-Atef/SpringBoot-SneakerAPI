spring.application.name=inventory-service
server.port=8084
#eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
spring.datasource.url=jdbc:postgresql://localhost:5435/Sneakers
spring.datasource.username=postgres
spring.datasource.password=admin
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto= update
spring.jpa.show-sql=true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.instance.hostname=localhost
logging.level.com.netflix.discovery=OFF
logging.level.com.netflix.eureka=OFF
spring.cloud.compatibility-verifier.enabled=false

springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8181/realms/sneakers-microservices-security-realm


resilience4j.timelimiter.configs.default.timeout-duration=3s
resilience4j.timelimiter.instances.itemsCheck.base-config=default

# The max amount of time a call can last
resilience4j.timelimiter.instances.itemsCheck.timeout-duration=3s
# Cancel the Running Completable Futures After TimeOut.
resilience4j.timelimiter.configs.default.cancel-running-future=true

# Max amount of parallel executions allowed by the bulkhead
resilience4j.bulkhead.configs.default.max-concurrent-calls=2

# Max amount of time a thread should be blocked for when attempting to enter a saturated bulkhead.
resilience4j.bulkhead.configs.default.max-wait-duration=0
resilience4j.bulkhead.instances.itemsCheck.base-config=default


# Actuator Endpoints
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


# Resilience4j Properties
resilience4j.circuitbreaker.instances.sneakers.registerHealthIndicator=True
resilience4j.circuitbreaker.instances.sneakers.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.sneakers.slidingWindowSize=10
resilience4j.circuitbreaker.instances.sneakers.failureRateThreshold=50
resilience4j.circuitbreaker.instances.sneakers.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.sneakers.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.sneakers.automaticTransitionFromOpenToHalfOpenEnabled=True
resilience4j.circuitbreaker.instances.sneakers.minimum-number-of-calls=5


## Resilience4j Timeout Properties
resilience4j.timelimiter.instances.sneakers.timeout-duration=3s


# Resilience4j retry Properties
resilience4j.retry.instances.sneakers.max-attempts=2
resilience4j.retry.instances.sneakers.wait-duration=2s



# Resilience4j Properties
resilience4j.circuitbreaker.instances.sneakers2.registerHealthIndicator=True
resilience4j.circuitbreaker.instances.sneakers2.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.sneakers2.slidingWindowSize=10
resilience4j.circuitbreaker.instances.sneakers2.failureRateThreshold=50
resilience4j.circuitbreaker.instances.sneakers2.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.sneakers2.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.sneakers2.automaticTransitionFromOpenToHalfOpenEnabled=True
resilience4j.circuitbreaker.instances.sneakers2.minimum-number-of-calls=5


## Resilience4j Timeout Properties
resilience4j.timelimiter.instances.sneakers2.timeout-duration=3s


# Resilience4j retry Properties
resilience4j.retry.instances.sneakers2.max-attempts=2
resilience4j.retry.instances.sneakers2.wait-duration=2s